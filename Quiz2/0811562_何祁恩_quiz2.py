# -*- coding: utf-8 -*-
"""0811562_何祁恩_quiz2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1y86Tx5Yd-D2AWauYSTGhvtcfQiISdVBC
"""

import pandas as pd
import matplotlib.pyplot as plt

def problem_1():
  ret = {}
  years = [2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020]
  length = [103, 101, 99, 100, 100, 95, 95, 96, 93, 90]

  for i in range(len(years)):
    ret[years[i]] = length[i]
  return ret

def problem_2(dic):
  df = pd.DataFrame(list(dic.items()))
  df.columns = 'years', 'durations'
  return df

def problem_3(df, flag):
  x = pd.Series(df['years'])
  y = pd.Series(df['durations'])
  if flag == True:
    plt.plot(x,y)
    plt.title('Movie Durations 2011-2020')
    plt.rcParams["figure.figsize"] = [12,9]
    plt.show()
  return x, y

def problem_4(filename):
  df = pd.read_csv(filename)
  return df

def problem_5(df):
  df_subset = df[(df.type == 'Movie')]
  df_subset = df_subset[['title', 'country', 'genre', 'release_year', 'duration']]
  df_subset['duration'] = df_subset['duration'].str.extract('(\d+)').astype(float)
  df_subset = df_subset.reset_index()
  return df_subset

def problem_6(df_subset, flag):
  x = pd.Series(df_subset['release_year'])
  y = pd.Series(df_subset['duration'])

  if flag == True:
    plt.scatter(x,y)
    plt.title('Movie Duration by Year of Release')
    plt.show()
  return x, y

def problem_7(df_subset):
  df_duration_subset = pd.DataFrame()
  count = 0
  index = 0
  for index, row in df_subset.iterrows():
    if count == 20:
      break
    elif row.duration < 60:
      df_duration_subset[count] = row
      count += 1
  df_duration_subset = df_duration_subset.T
  return df_duration_subset

def problem_8(df_subset):
  color = []
  for index, row in df_subset.iterrows():
    if row.genre == 'Children & Family Movies':
      color.append('red')
    elif row.genre == 'Documentaries':
      color.append('blue')
    elif row.genre == 'Stand-Up Comedy' or row.genre == 'Comedies':
      color.append('green')
    else:
      color.append('black')
  return color

def problem_9(df_subset, color, flag):
  x = pd.Series(df_subset['release_year'])
  y = pd.Series(df_subset['duration'])
  
  if flag == True:
    plt.style.use('fivethirtyeight')
    fig = plt.figure(figsize=(12, 8))
    plt.scatter(x,y,c = color)
    plt.title('Movie duration by year of release')
    plt.xlabel('Release year')
    plt.ylabel('Duration (min)')
    plt.show()
  return x, y, color

def problem_10():
  result = "No"
  return result

if __name__ == "__main__": 
  dic = problem_1()
  df_2 = problem_2(dic)
  x,y = problem_3(df_2, True)
  df = problem_4('movies.csv')
  df_subset = problem_5(df)
  x1, y1= problem_6(df_subset, True)
  df_dur = problem_7(df_subset)
  color = problem_8(df_subset)
  x2, y2, color = problem_9(df_subset, color, True)
  result = problem_10()
  print(result)